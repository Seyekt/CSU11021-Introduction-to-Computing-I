


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 1
    3 00000000         ; 
    4 00000000         
    5 00000000                 AREA             RESET, CODE, READONLY
    6 00000000                 ENTRY
    7 00000000         
    8 00000000         ;
    9 00000000         ; start of code
   10 00000000         ;
   11 00000000 E3A01005        LDR              R1, =5      ; x = 5
   12 00000004 E3A02006        LDR              R2, =6      ; y = 6
   13 00000008 E3A03002        LDR              R3, =2      ; z = 2
   14 0000000C         
   15 0000000C         ;
   16 0000000C         ; compute x*x + y + 4 (35 or 0x23)
   17 0000000C         ;
   18 0000000C E0000191        MUL              R0, R1, R1  ; R0 = x*x
   19 00000010 E0800002        ADD              R0, R0, R2  ; R0 = x*x + y
   20 00000014 E2800004        ADD              R0, R0, #4  ; R0 = x*x + y + 4
   21 00000018         ;
   22 00000018         ; add your code here
   23 00000018         ;
   24 00000018         ;Q1: compute 3x^2 + 5x
   25 00000018         
   26 00000018 E0040191        MUL              R4, R1, R1  ; R4 = x^2
   27 0000001C E3A05003        MOV              R5, #3      ; R5 = 3
   28 00000020 E0000594        MUL              R0, R4, R5  ; R0 = 3x^2
   29 00000024         
   30 00000024 E3A04005        MOV              R4, #5      ; R4 = 5
   31 00000028 E0050491        MUL              R5, R1, R4  ; R5 = 5x
   32 0000002C         
   33 0000002C E0800005        ADD              R0, R0, R5  ; R0 = 3x^2 + 5x
   34 00000030         
   35 00000030         ;Q2: compute  2x^2 + 6xy + 3y^2
   36 00000030         
   37 00000030         
   38 00000030 E0040191        MUL              R4, R1, R1  ; R4 = x^2
   39 00000034 E3A05002        MOV              R5, #2      ; R5 = 2
   40 00000038 E0000594        MUL              R0, R4, R5  ; R0 = 2x^2
   41 0000003C         
   42 0000003C E0040291        MUL              R4, R1, R2  ; R4 = xy
   43 00000040 E3A05006        MOV              R5, #6      ; R5 = 6
   44 00000044 E0060594        MUL              R6, R4, R5  ; R6 = 6xy
   45 00000048         
   46 00000048 E0040292        MUL              R4, R2, R2  ; R4 = y^2
   47 0000004C E3A05003        MOV              R5, #3      ; R5 = 3
   48 00000050 E0070495        MUL              R7, R5, R4  ; R7 = 3y^2
   49 00000054         
   50 00000054 E0800006        ADD              R0, R0, R6  ; R0 = 2x^2 + 6xy
   51 00000058 E0800007        ADD              R0, R0, R7  ; R0 = 2x^2 + 6xy +
                                                             3y^2
   52 0000005C         
   53 0000005C         ;Q3: compute  x^3 - 4x^2 + 3x + 8
   54 0000005C         
   55 0000005C E0000191        MUL              R0, R1, R1  ; x^2
   56 00000060 E0000091        MUL              R0, R1, R0  ; x^3
   57 00000064         
   58 00000064 E0040191        MUL              R4, R1, R1  ; R4 = x^2



ARM Macro Assembler    Page 2 


   59 00000068 E3A05004        MOV              R5, #4      ; R5 = 4
   60 0000006C E0060594        MUL              R6, R4, R5  ; R6 = 4x^2
   61 00000070         
   62 00000070 E3A04003        MOV              R4, #3      ; R4 = 3
   63 00000074 E0070194        MUL              R7, R4, R1  ; R7 = 3x
   64 00000078         
   65 00000078 E3A08008        MOV              R8, #8      ; R8 = 8
   66 0000007C         
   67 0000007C E0400006        SUB              R0, R0, R6  ; R0 = x^3 - 4x^2
   68 00000080 E0800007        ADD              R0, R0, R7  ; R0 = x^3 - 4x^2 +
                                                             3x
   69 00000084 E0800008        ADD              R0, R0, R8  ; R0 = x^3 - 4x^2 +
                                                             3x + 8
   70 00000088         
   71 00000088         
   72 00000088         ;Q4 compute 3x^4 - 5x – 16(y^4)(z^4)
   73 00000088         
   74 00000088 E0040191        MUL              R4, R1, R1  ; R0 = x^2
   75 0000008C E0000494        MUL              R0, R4, R4  ; R0 = x^4
   76 00000090 E3A04003        MOV              R4, #3      ; R4 = 3
   77 00000094 E0000094        MUL              R0, R4, R0  ; R0 = 3x^4
   78 00000098         
   79 00000098 E3A05005        MOV              R5, #5      ; R5 = 5
   80 0000009C E0060195        MUL              R6, R5, R1  ; R6 = 5x
   81 000000A0         
   82 000000A0         
   83 000000A0 E3A05010        MOV              R5, #16     ; R5 = 16
   84 000000A4         
   85 000000A4 E0040292        MUL              R4, R2, R2  ; R4 = y^2
   86 000000A8 E0070494        MUL              R7, R4, R4  ; R4 = y^4
   87 000000AC         
   88 000000AC E0040393        MUL              R4, R3, R3  ; R4 = z^2
   89 000000B0 E0080494        MUL              R8, R4, R4  ; R8 = z^4
   90 000000B4         
   91 000000B4 E0040795        MUL              R4, R5, R7  ; R4 = 16y^4
   92 000000B8 E0040498        MUL              R4, R8, R4  ; R4 = 16(y^4)(z^4)
                                                            
   93 000000BC         
   94 000000BC E0400006        SUB              R0, R0, R6  ; R0 = 3x^4 - 5x
   95 000000C0 E0400004        SUB              R0, R0, R4  ; R0 = 3x^4 - 5x - 
                                                            16(y^4)(z^4)
   96 000000C4         
   97 000000C4         
   98 000000C4 EAFFFFFE 
                       L       B                L           ; infinite loop to 
                                                            end programme
   99 000000C8         
  100 000000C8                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1.d -o.\objects\lab1.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab1.lst lab1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

L 000000C4

Symbol: L
   Definitions
      At line 98 in file lab1.s
   Uses
      At line 98 in file lab1.s
Comment: L used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 5 in file lab1.s
   Uses
      None
Comment: RESET unused
2 symbols
334 symbols in table
